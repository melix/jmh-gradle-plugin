/*
 * Copyright 2014-2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
    id 'me.champeau.jmh'
}

repositories {
    mavenCentral()
}

// Configure Java compilation tasks to enable feature previews
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("--enable-preview")
    javaCompiler.set(javaToolchains.compilerFor {
        // Using 15 so that we can try a feature preview
        languageVersion.set(JavaLanguageVersion.of(22))
    })
}

// Then configure the JMH Tasks to build with Java 22
tasks.withType(me.champeau.jmh.WithJavaToolchain).configureEach {
    javaLauncher.set(javaToolchains.launcherFor {
        languageVersion.set(JavaLanguageVersion.of(22))
    })
}

// Configure the JMH bytecode generator to support feature previews
tasks.withType(me.champeau.jmh.JmhBytecodeGeneratorTask).configureEach {
    jvmArgs.set(["--enable-preview"])
}

// And finally configure the JMH runtime executor to run with feature previews
jmh {
    jvmArgs = ['--enable-preview']
}
